/*
	TDResource.h
	The implementation of properties and methods for the TDResource object.
	Generated by SudzC.com
*/
#import "TDResource.h"

#import "TDOperation.h"
@implementation TDResource
	@synthesize Code = _Code;
	@synthesize Name = _Name;
	@synthesize Operations = _Operations;
	@synthesize Error = _Error;

	- (id) init
	{
		if(self = [super init])
		{
			self.Code = nil;
			self.Name = nil;
			self.Operations = nil; // [[TDOperation alloc] init];
			self.Error = nil;

		}
		return self;
	}

	+ (TDResource*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		// оригинал return [[self alloc] initWithNode: node];
        
        //->
        NSLog(@"      Заполнение рабочих центров зоны");
    
        SoapArray *array = [[SoapArray alloc] init];
        for(CXMLNode* child in [node children]){
            
            //[array addObject:[[self alloc] initWithNode:child]];
            NSLog(@"   ");
            NSLog(@"      child.name=%@   child=%@", child.name, child);// отладка
            
            if ([child.name isEqualToString:@"m:Resources"]) {
                
                NSLog(@"        Попытка добавления рабочего центра child=%@", child);
                [array addObject:[[self alloc] initWithNode:child]];
                
            }

        }
        return array;
        //<-
        
        
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.Code = [Soap getNodeValue: node withName: @"Code"];
			self.Name = [Soap getNodeValue: node withName: @"Name"];
			//self.Operations = [[TDOperation createWithNode: [Soap getNode: node withName: @"Operations"]] object];
			//self.Operations = nil;//отладка
            self.Operations = [[TDOperation createWithNode:node] object];
            
            self.Error = [Soap getNodeValue: node withName: @"Error"];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"Resource"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.Code != nil) [s appendFormat: @"<Code>%@</Code>", [[self.Code stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Name != nil) [s appendFormat: @"<Name>%@</Name>", [[self.Name stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Operations != nil) [s appendString: [self.Operations serialize: @"Operations"]];
		if (self.Error != nil) [s appendFormat: @"<Error>%@</Error>", [[self.Error stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[TDResource class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
