/*
	TDProduction.m
	The implementation classes and methods for the Production web service.
	Generated by SudzC.com
*/

#import "TDProduction.h"
				
#import "Soap.h"
	
#import "TDMfgLogRecord.h"
#import "TDMfgLogRecordList.h"
#import "TDPrinterList.h"
#import "TDStateObjectList.h"
#import "TDTraceObject.h"
#import "TDNomenclSpec.h"
#import "TDOperation.h"
#import "TDMfgOrder.h"
#import "TDMfgOrderEx.h"
#import "TDNomenclSpecRow.h"
#import "TDNomenclature.h"
#import "TDResource.h"
#import "TDZone.h"
#import "TDPrinter.h"
#import "TDUser.h"
#import "TDStateObjectRecord.h"

/* Implementation of the service */
				
@implementation TDProduction

	- (id) init
	{
		if(self = [super init])
		{
			self.serviceUrl = @"http://srv08.trubodetal.ru/mnfc2005/ws/Production.1cws";
			self.namespace = @"http://www.trubodetal.ru/Production";
			self.headers = nil;
			self.logging = NO;
		}
		return self;
	}
	
	- (id) initWithUsername: (NSString*) username andPassword: (NSString*) password {
		if(self = [super initWithUsername:username andPassword:password]) {
		}
		return self;
	}
	
	+ (TDProduction*) service {
		//return [TDProduction serviceWithUsername:nil andPassword:nil];
        //->23.06.2013
        return [TDProduction serviceWithUsername:@"Adm" andPassword:@"mad"];
        //<-23.06.2013
    }
	
	+ (TDProduction*) serviceWithUsername: (NSString*) username andPassword: (NSString*) password {
		return [[TDProduction alloc] initWithUsername:username andPassword:password];
	}

		
	/* Returns NSString*.  */
	- (SoapRequest*) CreateBlank: (id <SoapDelegate>) handler InputBarcode: (NSString*) InputBarcode NumberMfg: (NSString*) NumberMfg YearMfg: (NSString*) YearMfg NomenclCode: (int) NomenclCode
	{
		return [self CreateBlank: handler action: nil InputBarcode: InputBarcode NumberMfg: NumberMfg YearMfg: YearMfg NomenclCode: NomenclCode];
	}

	- (SoapRequest*) CreateBlank: (id) _target action: (SEL) _action InputBarcode: (NSString*) InputBarcode NumberMfg: (NSString*) NumberMfg YearMfg: (NSString*) YearMfg NomenclCode: (int) NomenclCode
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: InputBarcode forName: @"InputBarcode"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: NumberMfg forName: @"NumberMfg"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: YearMfg forName: @"YearMfg"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: NomenclCode] forName: @"NomenclCode"]];
		NSString* _envelope = [Soap createEnvelope: @"CreateBlank" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.trubodetal.ru/Production#Production:CreateBlank" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) CreateBlankEx: (id <SoapDelegate>) handler InputBarcode: (NSString*) InputBarcode NumberMfg: (NSString*) NumberMfg YearMfg: (NSString*) YearMfg NomenclCode: (int) NomenclCode NomenclSubType: (NSString*) NomenclSubType
	{
		return [self CreateBlankEx: handler action: nil InputBarcode: InputBarcode NumberMfg: NumberMfg YearMfg: YearMfg NomenclCode: NomenclCode NomenclSubType: NomenclSubType];
	}

	- (SoapRequest*) CreateBlankEx: (id) _target action: (SEL) _action InputBarcode: (NSString*) InputBarcode NumberMfg: (NSString*) NumberMfg YearMfg: (NSString*) YearMfg NomenclCode: (int) NomenclCode NomenclSubType: (NSString*) NomenclSubType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: InputBarcode forName: @"InputBarcode"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: NumberMfg forName: @"NumberMfg"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: YearMfg forName: @"YearMfg"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: NomenclCode] forName: @"NomenclCode"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: NomenclSubType forName: @"NomenclSubType"]];
		NSString* _envelope = [Soap createEnvelope: @"CreateBlankEx" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.trubodetal.ru/Production#Production:CreateBlankEx" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) CreateDocControl: (id <SoapDelegate>) handler NumberMfg: (NSString*) NumberMfg YearMfg: (NSString*) YearMfg NomenclMfgCode: (int) NomenclMfgCode NomenclCode: (int) NomenclCode InputBarcode: (NSString*) InputBarcode ZoneCode: (NSString*) ZoneCode UserCode: (NSString*) UserCode
	{
		return [self CreateDocControl: handler action: nil NumberMfg: NumberMfg YearMfg: YearMfg NomenclMfgCode: NomenclMfgCode NomenclCode: NomenclCode InputBarcode: InputBarcode ZoneCode: ZoneCode UserCode: UserCode];
	}

	- (SoapRequest*) CreateDocControl: (id) _target action: (SEL) _action NumberMfg: (NSString*) NumberMfg YearMfg: (NSString*) YearMfg NomenclMfgCode: (int) NomenclMfgCode NomenclCode: (int) NomenclCode InputBarcode: (NSString*) InputBarcode ZoneCode: (NSString*) ZoneCode UserCode: (NSString*) UserCode
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: NumberMfg forName: @"NumberMfg"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: YearMfg forName: @"YearMfg"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: NomenclMfgCode] forName: @"NomenclMfgCode"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: NomenclCode] forName: @"NomenclCode"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: InputBarcode forName: @"InputBarcode"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: ZoneCode forName: @"ZoneCode"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: UserCode forName: @"UserCode"]];
		NSString* _envelope = [Soap createEnvelope: @"CreateDocControl" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.trubodetal.ru/Production#Production:CreateDocControl" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) CreateWaste: (id <SoapDelegate>) handler InputBarcode: (NSString*) InputBarcode Lenght: (int) Lenght Width: (int) Width
	{
		return [self CreateWaste: handler action: nil InputBarcode: InputBarcode Lenght: Lenght Width: Width];
	}

	- (SoapRequest*) CreateWaste: (id) _target action: (SEL) _action InputBarcode: (NSString*) InputBarcode Lenght: (int) Lenght Width: (int) Width
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: InputBarcode forName: @"InputBarcode"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: Lenght] forName: @"Lenght"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: Width] forName: @"Width"]];
		NSString* _envelope = [Soap createEnvelope: @"CreateWaste" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.trubodetal.ru/Production#Production:CreateWaste" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) CreateWasteEx: (id <SoapDelegate>) handler InputBarcode: (NSString*) InputBarcode Lenght: (int) Lenght Width: (int) Width Lenght1: (int) Lenght1 Width1: (int) Width1
	{
		return [self CreateWasteEx: handler action: nil InputBarcode: InputBarcode Lenght: Lenght Width: Width Lenght1: Lenght1 Width1: Width1];
	}

	- (SoapRequest*) CreateWasteEx: (id) _target action: (SEL) _action InputBarcode: (NSString*) InputBarcode Lenght: (int) Lenght Width: (int) Width Lenght1: (int) Lenght1 Width1: (int) Width1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: InputBarcode forName: @"InputBarcode"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: Lenght] forName: @"Lenght"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: Width] forName: @"Width"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: Lenght1] forName: @"Lenght1"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: Width1] forName: @"Width1"]];
		NSString* _envelope = [Soap createEnvelope: @"CreateWasteEx" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.trubodetal.ru/Production#Production:CreateWasteEx" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns TDTraceObject*.  */
	- (SoapRequest*) GetInfo: (id <SoapDelegate>) handler Barcode: (NSString*) Barcode
	{
		return [self GetInfo: handler action: nil Barcode: Barcode];
	}

	- (SoapRequest*) GetInfo: (id) _target action: (SEL) _action Barcode: (NSString*) Barcode
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: Barcode forName: @"Barcode"]];
		NSString* _envelope = [Soap createEnvelope: @"GetInfo" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.trubodetal.ru/Production#Production:GetInfo" postData: _envelope deserializeTo: [TDTraceObject alloc]];
		[_request send];
		return _request;
	}

	/* Returns TDUser*.  */
	- (SoapRequest*) GetInitalDB: (id <SoapDelegate>) handler UserCode: (NSString*) UserCode
	{
		return [self GetInitalDB: handler action: nil UserCode: UserCode];
	}

	- (SoapRequest*) GetInitalDB: (id) _target action: (SEL) _action UserCode: (NSString*) UserCode
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UserCode forName: @"UserCode"]];
		NSString* _envelope = [Soap createEnvelope: @"GetInitalDB" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.trubodetal.ru/Production#Production:GetInitalDB" postData: _envelope deserializeTo: [TDUser alloc]];
		[_request send];
		return _request;
	}

	/* Returns TDUser*.  */
	- (SoapRequest*) GetInitalDBFromMacAddress: (id <SoapDelegate>) handler MacAddress: (NSString*) MacAddress
	{
		return [self GetInitalDBFromMacAddress: handler action: nil MacAddress: MacAddress];
	}

	- (SoapRequest*) GetInitalDBFromMacAddress: (id) _target action: (SEL) _action MacAddress: (NSString*) MacAddress
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: MacAddress forName: @"MacAddress"]];
		NSString* _envelope = [Soap createEnvelope: @"GetInitalDBFromMacAddress" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.trubodetal.ru/Production#Production:GetInitalDBFromMacAddress" postData: _envelope deserializeTo: [TDUser alloc]];
		[_request send];
		return _request;
	}

	/* Returns TDMfgOrder*.  */
	- (SoapRequest*) GetMfg: (id <SoapDelegate>) handler NumberMfg: (NSString*) NumberMfg YearMfg: (NSString*) YearMfg
	{
		return [self GetMfg: handler action: nil NumberMfg: NumberMfg YearMfg: YearMfg];
	}

	- (SoapRequest*) GetMfg: (id) _target action: (SEL) _action NumberMfg: (NSString*) NumberMfg YearMfg: (NSString*) YearMfg
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: NumberMfg forName: @"NumberMfg"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: YearMfg forName: @"YearMfg"]];
		NSString* _envelope = [Soap createEnvelope: @"GetMfg" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.trubodetal.ru/Production#Production:GetMfg" postData: _envelope deserializeTo: [TDMfgOrder alloc]];
		[_request send];
		return _request;
	}

	/* Returns TDMfgOrderEx*.  */
	- (SoapRequest*) GetMfgEx: (id <SoapDelegate>) handler NumberMfg: (NSString*) NumberMfg YearMfg: (NSString*) YearMfg
	{
		return [self GetMfgEx: handler action: nil NumberMfg: NumberMfg YearMfg: YearMfg];
	}

	- (SoapRequest*) GetMfgEx: (id) _target action: (SEL) _action NumberMfg: (NSString*) NumberMfg YearMfg: (NSString*) YearMfg
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: NumberMfg forName: @"NumberMfg"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: YearMfg forName: @"YearMfg"]];
		NSString* _envelope = [Soap createEnvelope: @"GetMfgEx" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.trubodetal.ru/Production#Production:GetMfgEx" postData: _envelope deserializeTo: [TDMfgOrderEx alloc]];
		[_request send];
		return _request;
	}

	/* Returns TDPrinterList*.  */
	- (SoapRequest*) GetPrinters: (id <SoapDelegate>) handler
	{
		return [self GetPrinters: handler action: nil];
	}

	- (SoapRequest*) GetPrinters: (id) _target action: (SEL) _action
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		NSString* _envelope = [Soap createEnvelope: @"GetPrinters" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.trubodetal.ru/Production#Production:GetPrinters" postData: _envelope deserializeTo: [TDPrinterList alloc]];
		[_request send];
		return _request;
	}

	/* Returns TDNomenclSpec*.  */
	- (SoapRequest*) GetSpecNomencl: (id <SoapDelegate>) handler NomenclCode: (int) NomenclCode
	{
		return [self GetSpecNomencl: handler action: nil NomenclCode: NomenclCode];
	}

	- (SoapRequest*) GetSpecNomencl: (id) _target action: (SEL) _action NomenclCode: (int) NomenclCode
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: NomenclCode] forName: @"NomenclCode"]];
		NSString* _envelope = [Soap createEnvelope: @"GetSpecNomencl" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.trubodetal.ru/Production#Production:GetSpecNomencl" postData: _envelope deserializeTo: [TDNomenclSpec alloc]];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) GetVersion: (id <SoapDelegate>) handler
	{
		return [self GetVersion: handler action: nil];
	}

	- (SoapRequest*) GetVersion: (id) _target action: (SEL) _action
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		NSString* _envelope = [Soap createEnvelope: @"GetVersion" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.trubodetal.ru/Production#Production:GetVersion" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) GetVersionLogistics: (id <SoapDelegate>) handler
	{
		return [self GetVersionLogistics: handler action: nil];
	}

	- (SoapRequest*) GetVersionLogistics: (id) _target action: (SEL) _action
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		NSString* _envelope = [Soap createEnvelope: @"GetVersionLogistics" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.trubodetal.ru/Production#Production:GetVersionLogistics" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns TDStateObjectList*.  */
	- (SoapRequest*) ObjectsInZone: (id <SoapDelegate>) handler ZoneCode: (NSString*) ZoneCode
	{
		return [self ObjectsInZone: handler action: nil ZoneCode: ZoneCode];
	}

	- (SoapRequest*) ObjectsInZone: (id) _target action: (SEL) _action ZoneCode: (NSString*) ZoneCode
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: ZoneCode forName: @"ZoneCode"]];
		NSString* _envelope = [Soap createEnvelope: @"ObjectsInZone" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.trubodetal.ru/Production#Production:ObjectsInZone" postData: _envelope deserializeTo: [TDStateObjectList alloc]];
		[_request send];
		return _request;
	}

	/* Returns TDStateObjectList*.  */
	- (SoapRequest*) ObjectsOnOperation: (id <SoapDelegate>) handler ZoneCode: (NSString*) ZoneCode
	{
		return [self ObjectsOnOperation: handler action: nil ZoneCode: ZoneCode];
	}

	- (SoapRequest*) ObjectsOnOperation: (id) _target action: (SEL) _action ZoneCode: (NSString*) ZoneCode
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: ZoneCode forName: @"ZoneCode"]];
		NSString* _envelope = [Soap createEnvelope: @"ObjectsOnOperation" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.trubodetal.ru/Production#Production:ObjectsOnOperation" postData: _envelope deserializeTo: [TDStateObjectList alloc]];
		[_request send];
		return _request;
	}

	/* Returns int.  */
	- (SoapRequest*) PrintBarcode: (id <SoapDelegate>) handler Barcode: (NSString*) Barcode PrinterName: (NSString*) PrinterName
	{
		return [self PrintBarcode: handler action: nil Barcode: Barcode PrinterName: PrinterName];
	}

	- (SoapRequest*) PrintBarcode: (id) _target action: (SEL) _action Barcode: (NSString*) Barcode PrinterName: (NSString*) PrinterName
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: Barcode forName: @"Barcode"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: PrinterName forName: @"PrinterName"]];
		NSString* _envelope = [Soap createEnvelope: @"PrintBarcode" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.trubodetal.ru/Production#Production:PrintBarcode" postData: _envelope deserializeTo: @"int"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) PutOnStorage: (id <SoapDelegate>) handler Barcode: (NSString*) Barcode ZoneCode: (NSString*) ZoneCode UserCode: (NSString*) UserCode
	{
		return [self PutOnStorage: handler action: nil Barcode: Barcode ZoneCode: ZoneCode UserCode: UserCode];
	}

	- (SoapRequest*) PutOnStorage: (id) _target action: (SEL) _action Barcode: (NSString*) Barcode ZoneCode: (NSString*) ZoneCode UserCode: (NSString*) UserCode
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: Barcode forName: @"Barcode"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: ZoneCode forName: @"ZoneCode"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: UserCode forName: @"UserCode"]];
		NSString* _envelope = [Soap createEnvelope: @"PutOnStorage" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.trubodetal.ru/Production#Production:PutOnStorage" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) PutRecord: (id <SoapDelegate>) handler DateOperation: (NSDate*) DateOperation ZoneCode: (NSString*) ZoneCode ResourceCode: (NSString*) ResourceCode OperationCode: (NSString*) OperationCode BarcodeBefore: (NSString*) BarcodeBefore BarcodeAfter: (NSString*) BarcodeAfter UserCode: (NSString*) UserCode State: (int) State
	{
		return [self PutRecord: handler action: nil DateOperation: DateOperation ZoneCode: ZoneCode ResourceCode: ResourceCode OperationCode: OperationCode BarcodeBefore: BarcodeBefore BarcodeAfter: BarcodeAfter UserCode: UserCode State: State];
	}

	- (SoapRequest*) PutRecord: (id) _target action: (SEL) _action DateOperation: (NSDate*) DateOperation ZoneCode: (NSString*) ZoneCode ResourceCode: (NSString*) ResourceCode OperationCode: (NSString*) OperationCode BarcodeBefore: (NSString*) BarcodeBefore BarcodeAfter: (NSString*) BarcodeAfter UserCode: (NSString*) UserCode State: (int) State
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: DateOperation forName: @"DateOperation"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: ZoneCode forName: @"ZoneCode"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: ResourceCode forName: @"ResourceCode"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: OperationCode forName: @"OperationCode"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: BarcodeBefore forName: @"BarcodeBefore"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: BarcodeAfter forName: @"BarcodeAfter"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: UserCode forName: @"UserCode"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: State] forName: @"State"]];
		NSString* _envelope = [Soap createEnvelope: @"PutRecord" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.trubodetal.ru/Production#Production:PutRecord" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns int.  */
	- (SoapRequest*) TestConnection: (id <SoapDelegate>) handler
	{
		return [self TestConnection: handler action: nil];
	}

	- (SoapRequest*) TestConnection: (id) _target action: (SEL) _action
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		NSString* _envelope = [Soap createEnvelope: @"TestConnection" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.trubodetal.ru/Production#Production:TestConnection" postData: _envelope deserializeTo: @"int"];
		[_request send];
		return _request;
	}


@end
	