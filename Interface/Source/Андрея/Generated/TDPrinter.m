/*
	TDPrinter.h
	The implementation of properties and methods for the TDPrinter object.
	Generated by SudzC.com
*/
#import "TDPrinter.h"

#import "TDZone.h"
@implementation TDPrinter
	@synthesize Code = _Code;
	@synthesize Name = _Name;
	@synthesize IP = _IP;
	@synthesize Zone = _Zone;
	@synthesize Error = _Error;

	- (id) init
	{
		if(self = [super init])
		{
			self.Code = nil;
			self.Name = nil;
			self.IP = nil;
			self.Zone = nil; // [[TDZone alloc] init];
			self.Error = nil;

		}
		return self;
	}

	+ (TDPrinter*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return [[self alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.Code = [Soap getNodeValue: node withName: @"Code"];
			self.Name = [Soap getNodeValue: node withName: @"Name"];
			self.IP = [Soap getNodeValue: node withName: @"IP"];
			self.Zone = [[TDZone createWithNode: [Soap getNode: node withName: @"Zone"]] object];
			self.Error = [Soap getNodeValue: node withName: @"Error"];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"Printer"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.Code != nil) [s appendFormat: @"<Code>%@</Code>", [[self.Code stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Name != nil) [s appendFormat: @"<Name>%@</Name>", [[self.Name stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.IP != nil) [s appendFormat: @"<IP>%@</IP>", [[self.IP stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Zone != nil) [s appendString: [self.Zone serialize: @"Zone"]];
		if (self.Error != nil) [s appendFormat: @"<Error>%@</Error>", [[self.Error stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[TDPrinter class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
